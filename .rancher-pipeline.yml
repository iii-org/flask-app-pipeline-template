stages:

  - name: Publish Flask image
    steps:
    - publishImageConfig:
        dockerfilePath: ./Dockerfile
        buildContext: .
        tag: ${CICD_GIT_REPO_NAME}-web:latest
      env:
        PLUGIN_INSECURE: "true"

  - name: Publish DB image
    steps:
    - publishImageConfig:
        dockerfilePath: ./sql.Dockerfile
        buildContext: .
        tag: ${CICD_GIT_REPO_NAME}-db:latest
      env:
        PLUGIN_INSECURE: "true"

  - name: Deploy App
    steps:
    - applyAppConfig:
        catalogTemplate: cattle-global-data:iii-dev-charts3-flask
        version: 0.2.0
        name: ${CICD_GIT_REPO_NAME}-flask
        targetNamespace: p-v2nzs-pipeline
        answers:
          git.url: ${CICD_GIT_URL}
          git.repoName: ${CICD_GIT_REPO_NAME}
          git.branch: ${CICD_GIT_BRANCH}
          web.name: flask
          web.image: 127.0.0.1:34957/${CICD_GIT_REPO_NAME}-web
          web.tag: latest
          extraEnv[0].name: test
          extraEnv[0].value: bearflask
          extraEnv[1].name: test2
          extraEnv[1].value: bear22flask
          extraEnv[2].name: test3
          extraEnv[2].value: send message flask
    
  - name: Deploy App with db
    steps:
    - applyAppConfig:
        catalogTemplate: cattle-global-data:iii-dev-charts3-web-db
        version: 0.1.0
        name: ${CICD_GIT_REPO_NAME}-web-db
        targetNamespace: p-v2nzs-pipeline
        answers:
          git.url: ${CICD_GIT_URL}
          git.repoName: ${CICD_GIT_REPO_NAME}
          git.branch: ${CICD_GIT_BRANCH}
          web.name: flask
          web.image: 127.0.0.1:34957/${CICD_GIT_REPO_NAME}-web
          web.tag: latest
          db.image: 127.0.0.1:34957/${CICD_GIT_REPO_NAME}-db:latest
          db.tag: latest
          service.db.enable: "true"
          service.db.type: mysql
          service.db.rootpassword: bearflask
